apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: argocd-cert
  namespace: istio-system
spec:
  secretName: argocd-cert
  commonName: argocd.beansnet.net
  dnsNames:
  - argocd.beansnet.net
  issuerRef:
    name: letsencrypt-dns-prod
    kind: ClusterIssuer
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: argocd-gateway
  namespace: argocd
spec:
  selector:
    istio: ingress
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "argocd.beansnet.net"
    tls:
     httpsRedirect: true
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - "argocd.beansnet.net"
    tls:
      credentialName: argocd-cert
      maxProtocolVersion: TLSV1_3
      minProtocolVersion: TLSV1_2
      mode: SIMPLE
      cipherSuites:
        - ECDHE-ECDSA-AES128-GCM-SHA256
        - ECDHE-RSA-AES128-GCM-SHA256
        - ECDHE-ECDSA-AES128-SHA
        - AES128-GCM-SHA256
        - AES128-SHA
        - ECDHE-ECDSA-AES256-GCM-SHA384
        - ECDHE-RSA-AES256-GCM-SHA384
        - ECDHE-ECDSA-AES256-SHA
        - AES256-GCM-SHA384
        - AES256-SHA
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: argocd-virtualservice
  namespace: argocd
spec:
  hosts:
  - "argocd.beansnet.net"
  gateways:
  - argocd-gateway
  http:
  - route:
    - destination:
        host: argocd-server
        port:
          number: 80
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: gh-webhook
  namespace: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  action: ALLOW
  rules:
  - from:
    - source:
        remoteIpBlocks:
        - "192.30.252.0/22"
        - "185.199.108.0/22"
        - "140.82.112.0/20"
        - "143.55.64.0/20"
    to:
    - operation:
        paths:
        - /api/webhook
  - {}
